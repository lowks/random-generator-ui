{"version":3,"sources":["components/Stats.js","components/Button.js","components/Link.js","services/httpService.js","services/api.js","App.js","reportWebVitals.js","index.js"],"names":["Stats","data","data-testid","alphabeticalCount","floatCount","intCount","alphanumericCount","CustomButton","label","testID","handler","color","Button","onClick","variant","Link","link","href","style","textDecoration","methods","get","axios","post","put","patch","delete","generate","a","url","baseUrl","http","getReport","filename","App","useState","setLink","setFilename","stats","setStats","handleGenerate","body","downloadLink","handleReport","Grid","container","justify","alignItems","minHeight","Card","width","height","CardContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f716e940.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Stats = ({ data }) => {\n  return (\n    <>\n      <p>\n        Alphabetical string:{\" \"}\n        {!data ? null : (\n          <span data-testid=\"alphabetical-count\">{data.alphabeticalCount}</span>\n        )}\n      </p>\n      <p>\n        Real numbers:{\" \"}\n        {!data ? null : (\n          <span data-testid=\"float-count\">{data.floatCount}</span>\n        )}\n      </p>\n      <p>\n        Integers:{\" \"}\n        {!data ? null : <span data-testid=\"int-count\">{data.intCount}</span>}\n      </p>\n      <p>\n        Alphanumerics:{\" \"}\n        {!data ? null : (\n          <span data-testid=\"alphanumeric-count\">{data.alphanumericCount}</span>\n        )}\n      </p>\n    </>\n  );\n};\n\nexport default Stats;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst CustomButton = ({ label, testID, handler, color = \"primary\" }) => {\n  return (\n    <Button\n      data-testid={testID}\n      onClick={handler}\n      variant=\"outlined\"\n      color={color}\n    >\n      {label}\n    </Button>\n  );\n};\n\nexport default CustomButton;\n","import React from \"react\";\n\nconst Link = ({ link }) => {\n  return (\n    <p data-testid=\"link-text\">\n      Link:{\" \"}\n      {!link ? null : (\n        <a\n          data-testid=\"link-url\"\n          href={link}\n          style={{ textDecoration: \"none\" }}\n        >\n          click to download.\n        </a>\n      )}\n    </p>\n  );\n};\n\nexport default Link;\n","import axios from \"axios\";\n\nconst methods = {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  patch: axios.patch,\n  delete: axios.delete,\n};\n\nexport default methods;\n","import http from \"./httpService\";\nimport { baseUrl } from \"../config/config.json\";\n\nexport const generate = async () => {\n  const url = baseUrl + \"/generate\";\n  try {\n    return await http.get(url);\n  } catch (ex) {\n    return ex;\n  }\n};\n\nexport const getReport = async (filename) => {\n  const url = `${baseUrl}/report/${filename}`;\n  try {\n    return await http.get(url);\n  } catch (ex) {\n    return ex;\n  }\n};\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Stats from \"./components/Stats\";\nimport Button from \"./components/Button\";\nimport Link from \"./components/Link\";\nimport { generate, getReport } from \"./services/api\";\nimport { baseUrl } from \"./config/config.json\";\nimport \"fontsource-roboto\";\nimport \"./App.css\";\n\nfunction App() {\n  const [link, setLink] = useState(\"\");\n  const [filename, setFilename] = useState(\"\");\n  const [stats, setStats] = useState(null);\n\n  const handleGenerate = async () => {\n    const { data } = await generate();\n    if (data) {\n      const { downloadLink, filename } = data.body;\n      setFilename(filename);\n      setLink(`${baseUrl}${downloadLink}`);\n    }\n  };\n\n  const handleReport = async () => {\n    const { data } = await getReport(filename);\n    if (data) {\n      setStats(data.body);\n    }\n  };\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Card data-testid=\"card\" style={{ width: 300, height: 300 }}>\n        <CardContent data-testid=\"card-content\">\n          <Button\n            label=\"Generate\"\n            testID=\"generate-btn\"\n            color=\"secondary\"\n            handler={handleGenerate}\n          />\n          <Link link={link} />\n          <Button label=\"Report\" testID=\"report-btn\" handler={handleReport} />\n          <Stats data={stats} />\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}